---
layout: default
title: Modules
---
#content
  .well(style="padding: 8px 0")
    %ul.nav.nav-list
      -# FIXME add to site config (or some other way to make this not hardcoded)
      - iconmap = {'bom' => 'star', 'platform' => 'home', 'tool' => 'move', 'daemon' => 'cog',
                   'container_adapter' => 'retweet', 'extension' => 'road',
                  'test_runner' => 'play-circle', 'tool_plugin' => 'fire',
                  'shrinkwrap' => 'folder-open', 'tck' => 'tint'}
      -#- site.modules.each_pair do |type, modules|
      - iconmap.each_pair do |type, icon|
        - modules = site.modules[type]
        %li.nav-header
          %i{:class=>"icon-#{icon}"}
          = modules.first.component.type_name.pluralize
          - if modules.first.component.type_name.eql? 'Test Runner'
            = " (other than JUnit and TestNG)"
        - prev_vendor = nil
        - modules.each do |mod|
          - if !prev_vendor.nil? and mod.vendor and mod.vendor != prev_vendor
            %li.divider
          %li
            %a{:href=>mod.page.url}
              = mod.page.link_name
              - if mod.component.releases.empty?
                %span.label.label-warning SNAPSHOT
                &nbsp;
              - else !mod.component.releases.empty?
                %span.muted= " &#8211; #{mod.component.releases.last.version}"
              - if mod.component.external
                %span.label External
          - prev_vendor = mod.vendor
    %br
    %hr
    .td{style: 'padding: 0px 10px;'}
      %h2 Obsolete
      :markdown
        __This part contains modules that we don't maintain anymore. If you are interested in picking any of them up from where we left please reach out to us through [Arquillian forum](http://discuss.arquillian.org/).__
    %ul.nav.nav-list
      - iconmap.each_pair do |type, icon|
        - modules = site.modules["obsolete_" + type]
        - if !modules.nil?
          %li.nav-header
            %i{:class=>"icon-#{icon}"}
            = modules.first.component.type_name.pluralize
            - if modules.first.component.type_name.eql? 'Test Runner'
              = " (other than JUnit and TestNG)"
          - prev_vendor = nil
          - modules.each do |mod|
            - if !prev_vendor.nil? and mod.vendor and mod.vendor != prev_vendor
              %li.divider
            %li
              %a{:href=>mod.page.url}
                = mod.page.link_name
                - if mod.component.releases.empty?
                  %span.label.label-warning SNAPSHOT
                  &nbsp;
                - else !mod.component.releases.empty?
                  %span.muted= " &#8211; #{mod.component.releases.last.version}"
                - if mod.component.external
                  %span.label External
            - prev_vendor = mod.vendor
