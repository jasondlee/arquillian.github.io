---
---

h3(highlights). What's included in the Alpha2 release?

- <i class="icon-star"></i> Allow non JBossAS/WildFly containers to be configured := 

In Alpha1 the definition for the @JBoss AS / WildFly@ containers were hard coded. In Alpha2 we've externalized the configuration. By default @Chameleon@ will read the classpath resource "chameleon/default/containers.yaml":https://github.com/arquillian/arquillian-container-chameleon/blob/1.0.0.Alpha2/src/main/resources/chameleon/default/containers.yaml which is a yaml file that describes things like:

* target names
* version ranges
* adapter dependencies
* distribution download description
* configuration options to update

=:

- <i class="icon-star"></i> Updates to configuration := 

All configuration options that belong to the @Chameleon@ container are now prefixed with 'chameleon'.

That means that the configuration option from Alpha1 'target' is now called 'chameleonTarget'.
=:

- <i class="icon-star"></i> Define where distributions are found or downloaded := 

In Alpha1 distribution downloads would be placed in @target/server@  if you were using @Maven@ or @bin/server@ if you were using @Gradle@ as the build system.

In Alpha2 we've introduced a new configuration option named @chameleonDistributionDownloadFolder@. Via this option you can define where the distribution should be downloaded if you use the auto download feature of @Chameleon@. 

Optionally you can define @chameleonDistributionDownloadFolder@ to be @TMP@ and @Chameleon@ will create a new temp folder based on the @java.io.temp@ system property defined in the JVM.
=:

- <i class="icon-star"></i> Define a custom container configuration file := 

If you want to create your own version of the default @containers.yaml@ file, you can configure @Chameleon@ to point to it via the configuration option @chameleonContainerConfigurationFile@. Not this is loaded as a classloader resource and would need to be on the classpath, and not as a file on the file system.
=:

- <i class="icon-star"></i> Support GlassFish 3.x/4.1 container definitions := 

You can now use some of the following @chameleonTarget@ definitions to run against the @GlassFish@ server:

* glassfish:3.1:managed
* glassfish:4.0:remote
=: