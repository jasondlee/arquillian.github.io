---
date: 2018-03-29
author: dipak-pawar
---

h3. Highlights of this release

p. Apart from several bug fixes, this release contains three awesome features.

h3. Fabric8 Maven Plugin integration

p. From now you can use "fabric8-maven-plugin":https://maven.fabric8.io/ to build images and generate k8s/openshift artifacts and let cube use it in your tests.

However you have to configure @fabric8-maven-plugin@ using @arquillian.xml@ as per your need.

Here's an example:

bc(prettify).. <extension qualifier="openshift">
    <property name="cube.fmp.build">true</property>
</extension>

p. By enabling this property, cube will build images, generate resources using @fabric8-maven-plugin@ when running test from @Maven@ or @IDE@.

p(info). %User can configure to run @fabric8-maven-plugin@ only from @IDE@ (not from maven build) by setting property @cube.fmp.build.disable.for.mvn@ to @true@. Look "here":http://arquillian.org/arquillian-cube/#_fabric8_maven_plugin_integration_with_cube for more configuration options.%

p. Look at complete example "here":https://github.com/arquillian/arquillian-cube/tree/master/openshift/ftest-openshift-fabric8-maven-plugin.

h3. Expression Resolver for @RouteUrl

p. To resolve expression @@RouteURL("${my.expression}")@, Arquillian Cube looks in hierarchy of system property → environment variable → properties defined in arquillian.xml.

p. For Example if user is using @@RouteURL("${route.name}")@ with openshift extension configuration in @arquillian.xml@ like

bc(prettify)..   <extension qualifier="openshift">
    <property name="route.name">my-route</property>
  </extension>

p. then @@RouteURL("${route.name}")@ resolves to @@RouteURL("my-route")@. Look at "ftest":https://github.com/arquillian/arquillian-cube/tree/master/openshift/ftest-openshift-resources-standalone for complete example.

h3. Await Strategy - docker_health

p. Docker has "HEALTHCHECK":https://docs.docker.com/engine/reference/builder/#healthcheck instruction to test a container is still working. We have added new Await strategy @docker_health@ to wait for container to start working as per @HEALTHCHECK@ instruction defined in @Dockerfile@.

p. Many thanks to "Thibault Jamet":https://github.com/tjamet for providing implementation of @docker_health@ Await strategy.
