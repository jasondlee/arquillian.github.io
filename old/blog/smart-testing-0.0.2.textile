---
date: 2017-09-26
author: bartoszmajsak
---

h3. Highlights of this release

p. After a week since our very first release we have a brand new one! This time with several improvements and bug fixes, namely:

  * simplified installation process
  * hinting available strategies when misspelled in the configuration
  * ability to narrow search for affected tests
  * improved documentation

h3. Simplified getting started

p. Even though installation process is very simple, we are huge fans of automation. So we created one liner which will take care of adding Smart Testing to your project.

p. Simply execute following snippet and you are ready to go.

bc(prettify).. $ curl -sSL https://git.io/v5jy6 | bash

h3. Hinting available strategies

p. It might happen that you misspell a strategy when executing the build. For example:

bc(prettify).. $ mvn clean verify -Dsmart.testing=new,change,afected

p. This will lead to a failing build, but instead of leaving you with not just an exception thrown at your face and documentation to dig into, we are now hinting to matching strategies. With @0.0.2@ you will see instead:

bc(prettify).. Unable to find strategy [afected]. Did you mean [affected]?
Unable to find strategy [change]. Did you mean [changed]?

h3. Affected tests

p. "Affected":http://arquillian.org/smart-testing/#_affected is one of the strategies in Smart Testing which let you find tests related to business code you have just changed. By default we transitively look up all related tests, but this can lead to a lot of tests being prioritized. Especially if you have deep hierarchies in your project.

p. To find only immediate related tests we have introduced a configuration option @smart.testing.affected.transitivity@ which you can set to @false@.

h3. Asciidoctor Extensions

p. We've created two "Asciidoctor":http://asciidoctor.org/ "extensions":https://github.com/arquillian/smart-testing/tree/bc450807a90af6902f24dbaf0b12962f1a120920/.asciidoctor/lib to make documentation more resilient to changes and also to simplify the copy-paste process from documentation to your terminal.

p. First extension allows you to reference constants in the documentation from source code. For example to get the value represented by @SMART_TESTING_MODE@ constant, add @const@ macro in your document:

bc(prettyfy).. const:core/src/main/java/org/arquillian/smart/testing/Configuration.java[name="SMART_TESTING_MODE"]

p. Second extension brings copy-to-clipboard button in the rendered docs. To add it, simply use @copyToClipboard@ macro:

bc(prettify).. [[singleTest]]
`mvn test -Dtest=SampleTest`  copyToClipboard:singleTest[]

h3. What's next

We are working hard on the next release which will bring simplified configuration and many more cool features! Stay tuned!
